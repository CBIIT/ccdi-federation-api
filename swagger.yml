---
openapi: 3.0.3
info:
  title: CCDI Pediatric Cancer Data Catalog
  description: |-
    The CCDI Pediatric Cancer Data Catalog is an API that supports the querying
    of federated pediatric cancer within the broader community. The goal of the
    API is to support identification of pediatric cancer samples of interest via
    a variety of query parameters.
  contact:
    email: NCIChildhoodCancerDataInitiative@mail.nih.gov
  version: "0.1"
externalDocs:
  description: Learn more about the Childhood Cancer Data Initiative
  url: https://www.cancer.gov/research/areas/childhood/childhood-cancer-data-initiative
servers:
  - url: https://ccdi.stjude.cloud/api/v0
    description: St. Jude Children's Research Hospital API server
  - url: https://ccdi.treehouse.gi.ucsc.edu/api/v0
    description: Treehouse CCDI API server
  - url: https://ccdifederation.pedscommons.org/api/v0
    description: Pediatric Cancer Data Common CCDI API server
tags:
  - name: info
    description: Information about the API implementation itself.
  - name: subject
    description: CCDI Metadata Template Subject.
paths:
  /info:
    get:
      tags:
        - info
      summary: Information about the API implementation itself.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
  /subject/{id}:
    get:
      tags:
        - subject
      summary: Find a subject by id.
      operationId: retrieveSubject
      parameters:
        - name: id
          in: path
          description: Subject to return by Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
        '400':
          description: TBD
        '404':
          description: TBD
        '403':
          description: >-
            Cohort is too small.
  /subject:
    # this endpoint name and related attribute and parameters names - TBD
    get:
      tags:
        - subject
      summary: Find subjects
      description: >-
        A list of subjecta.
        Retrieve all subject or found by attributes.
      operationId: searchParticipants
      parameters:
        - name: sex
          in: query
          description: CDE 6343385 v1.0.
          required: false
          schema:
            type: string
        - name: race
          in: query
          description: CDE 2192199 v1.0.
          required: false
          schema:
            type: string
        - name: ethnicity
          in: query
          description: CDE 2192217 v.2.0.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Subjects'
        '400':
          description: TBD
        '403':
          description: >-
            Cohort is too small.
        '404':
          description: TBD
  /subject/by/{field}/count:
    get:
      tags:
        - subject
      summary: A response for grouping by field values and then counting.
      operationId: retrieveSubjectsByCount
      parameters:
        - name: field
          in: path
          description: Field to group by,
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectsCounts'
        '400':
          description: TBD
        '422':
          description: requested field to group by does not exist
  /metadata/fields/subject:
    get:
      tags:
        - subject
      summary: A listing the metadata fields supported for subjects
      operationId: retrieveSubjectsMetadataFields
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataFieldsForSubject'
        '400':
          description: TBD
components:
  schemas:
    Info:
      type: object
      properties:
        name:
          type: string
          example: "Organization A â€” CCDI Pediatric Cancer Catalog API"
        version:
          type: string
          example: 1.0.0
        support_email:
          type: string
          example: "support@organization.org"
    SubjectKind:
      type: string
      enum:
        - 'Participant'
        - 'Patient Derived Xenograft'
        - 'Cell Line'
        - 'Organoid'
        # CDE ID here
    MetadataField:
      type: object
      properties:
        value:
          type: string
        ancestors:
          type: array
          items:
            type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - value
    OwnedMetadataField:
      allOf:  # Combines the MetadataField and the inline model
        - $ref: '#/components/schemas/MetadataField'
        - type: object
          properties:
            owned:
              type: boolean
              nullable: true
    UnharmonizedMetadataFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetadataField'
        # [key: string]: MetadataField<any>
    SubjectMetadata:
      type: object
      properties:
        sex:
          $ref: '#/components/schemas/MetadataField'
          # CDE 6343385 v1.0 Required.
        race:
          type: array
          items:
            $ref: '#/components/schemas/MetadataField'
            # CDE 2192199 v1.0
        ethnicity:
          $ref: '#/components/schemas/MetadataField'
          # CDE 2192217 v.2.0.
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/OwnedMetadataField'
          description: >-
            CDE 6380049 v1.00
        unharmonized:
          $ref: '#/components/schemas/UnharmonizedMetadataFields'
      required:
        - sex
        - race
        - ethnicity
    Subject:
      type: object
      properties:
        id:
          type: integer
          description: >-
            ID
        name:
          type: string
          description: >-
            The primary name or identifier for a subject used
            within the source server. This identifier should
            ALWAYS be included in the 'identifiers' key under
            metadata, should that object exist.
        kind:
          $ref: '#/components/schemas/SubjectKind'
        metadata:
          $ref: '#/components/schemas/SubjectMetadata'
    Subjects:
      allOf:  # Combines the Subject array and count
        - type: object
          properties:
            counts:
              type: integer
        - type: array
          items:
            $ref: '#/components/schemas/Subject'
    TotalCounts:
      type: object
      properties:
        total:
          type: integer
    SubjectsByCountCounts:  # Dictionary structure
      allOf:  # Combines the TotalCounts and Count Dictionary
        - $ref: '#/components/schemas/TotalCounts'
        - type: object
          properties:
            values:
              $ref: '#/components/schemas/SubjectMapCounts'
    SubjectMapCounts:    # Dictionary key-value counts
      type: object
      additionalProperties:
        type: integer
    SubjectsCounts:
      type: object
      properties:
        counts:
          $ref: '#/components/schemas/SubjectsByCountCounts'
    HarmonizedMetadataFieldDescription:
      type: object
      properties:
        harmonized:
          type: boolean
          example: true
        path:
          type: string
        standard:
          type: string
        url:
          type: string
    UnharmonizedMetadataFieldDescription:
      type: object
      properties:
        harmonized:
          type: boolean
          example: false
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        standard:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
    MetadataFieldsForSubject:
      type: object
      properties:
        fields:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/UnharmonizedMetadataFieldDescription'
              - $ref: '#/components/schemas/HarmonizedMetadataFieldDescription'
...
